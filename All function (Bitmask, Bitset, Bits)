void printBinary(int num) 
{
	if (num <= 1)
	{
		cout << num;
		return;
	}
	printBinary(num >> 1);
	cout << (num & 1);
}
int countBits1(int num)	
{
	int cnt = 0;
	while (num)
	{
		cnt++;
		num &= (num - 1);
	}
	return cnt;
}
int getBit(int num, int idx)
{
	return (num >> idx) & 1;
}
int setBit1(int num, int idx)
{
	return  num | (1 << idx);
}
int setBit0(int num, int idx)
{
	return  num & ~(1 << idx);
}
int flibBit(int num, int idx)
{
	return  num ^ (1 << idx);
}
int lastBitValue(int num)
{
	return num & ~(num - 1);
}
